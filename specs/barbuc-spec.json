{
  "paths": {
    "/api/users/": {
      "get": {
        "responses": {
          "200": {
            "description": "List of users found in the database",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUsersList"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          }
        },
        "summary": "Retrieve list of users",
        "tags": [
          "users"
        ],
        "operationId": "ListUsers"
      },
      "post": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "201": {
            "description": "Infos of new user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InputCreateUser"
              }
            }
          }
        },
        "summary": "Create a new user",
        "tags": [
          "users"
        ],
        "operationId": "CreateUser"
      }
    },
    "/api/users/{user_id}": {
      "put": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "Update one user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InputUpdateUser"
              }
            }
          }
        },
        "summary": "Update an existing user",
        "tags": [
          "users"
        ],
        "operationId": "UpdateUser"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Delete one user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          }
        },
        "summary": "Delete an existing user",
        "tags": [
          "users"
        ],
        "operationId": "DeleteUser"
      },
      "parameters": [
        {
          "in": "path",
          "name": "user_id",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        }
      ]
    },
    "/api/auth/login": {
      "post": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "201": {
            "description": "Log the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginParams"
              }
            }
          }
        },
        "summary": "Login the user",
        "tags": [
          "auth"
        ],
        "operationId": "Login"
      }
    },
    "/api/auth/logout": {
      "post": {
        "responses": {
          "201": {
            "description": "Logout the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogoutResponse"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          }
        },
        "summary": "Logout the user",
        "tags": [
          "auth"
        ],
        "operationId": "Logout"
      }
    }
  },
  "info": {
    "title": "Barbuc-api",
    "version": "dev"
  },
  "tags": [
    {
      "name": "users",
      "description": "Managing Users"
    },
    {
      "name": "auth",
      "description": "Auth"
    }
  ],
  "openapi": "3.0.2",
  "components": {
    "schemas": {
      "Error": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "object",
            "description": "Errors"
          },
          "status": {
            "type": "string",
            "description": "Error name"
          },
          "message": {
            "type": "string",
            "description": "Error message"
          },
          "code": {
            "type": "integer",
            "description": "Error code"
          }
        }
      },
      "PaginationMetadata": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer"
          },
          "total_pages": {
            "type": "integer"
          },
          "first_page": {
            "type": "integer"
          },
          "last_page": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "previous_page": {
            "type": "integer"
          },
          "next_page": {
            "type": "integer"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "integer",
            "minimum": 0,
            "maximum": 2147483647,
            "description": "Unique user identifier"
          },
          "name": {
            "type": "string",
            "description": "Name of the user"
          },
          "email": {
            "type": "string",
            "description": "Email of the user"
          },
          "_last_login": {
            "type": "string",
            "nullable": true,
            "description": "Last login date of the user",
            "format": "date-time"
          },
          "_creation_time": {
            "type": "string",
            "nullable": true,
            "description": "User creation time",
            "format": "date-time"
          },
          "_update_time": {
            "type": "string",
            "nullable": true,
            "description": "Last user update time",
            "format": "date-time"
          }
        },
        "description": "User informations."
      },
      "GetUsersList": {
        "type": "object",
        "properties": {
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          }
        },
        "description": "List of users."
      },
      "InputCreateUser": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email of the user"
          },
          "password": {
            "type": "string",
            "description": "Password of the user"
          },
          "name": {
            "type": "string",
            "description": "Name of the user"
          }
        },
        "required": [
          "email",
          "name",
          "password"
        ],
        "description": "Input informations need to create user."
      },
      "UserResponse": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        },
        "description": "Create/Update/Delete a user."
      },
      "InputUpdateUser": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "New email of the user"
          },
          "password": {
            "type": "string",
            "description": "New password of the user"
          },
          "name": {
            "type": "string",
            "description": "New name of the user"
          }
        },
        "description": "New user information"
      },
      "LoginParams": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email of the login"
          },
          "password": {
            "type": "string",
            "description": "Password of the login"
          }
        },
        "required": [
          "email",
          "password"
        ],
        "description": "Login details"
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "Token of the user"
          }
        },
        "description": "Token of the user"
      },
      "LogoutResponse": {
        "type": "object",
        "properties": {
          "msg": {
            "type": "string",
            "description": "Message of logout"
          }
        },
        "description": "Logout details"
      }
    },
    "responses": {
      "DEFAULT_ERROR": {
        "description": "Default error response",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "UNPROCESSABLE_ENTITY": {
        "description": "Unprocessable Entity",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    }
  }
}
